// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Admin {
    id              Int      @id @default(autoincrement())
    name            String
    email           String   @unique
    password        String
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    isSuperadmin    Boolean  @default(false)
    sectors         AdminSectors[]
    isPending       Boolean  @default(true)
}

model Sector {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    admins    AdminSectors[]
    MSMEs     MSME[]
}

model AdminSectors {
    admin       Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)
    adminId     Int
    sector      Sector @relation(fields: [sectorId], references: [id])
    sectorId    Int

    @@id([adminId, sectorId])
}

model MSME {
    id                      Int      @id @default(autoincrement())
    companyName             String
    companyDescription      String
    companyLogo             String
    contactPerson           String
    contactNumber           String
    email                   String
    provinceAddress         String
    cityMunicipalityAddress String
    barangayAddress         String
    longitude               Float
    latitude                Float
    yearEstablished         Int
    productGallery          String[]
    majorProductLines       String[]
    facebookPage            String?
    instagramPage           String?
    createdAt               DateTime @default(now())
    updatedAt               DateTime @updatedAt
    sectors                 Sector @relation(fields: [sectorId], references: [id])
    visitors                Visitor[]
    ExportLogs              ExportLog[]
    sectorId                Int
}

model Visitor {
  id          String   @id @default(uuid())
  ip          String
  lastVisited DateTime
  msmeId      Int
  MSME        MSME     @relation(fields: [msmeId], references: [id])

  @@unique([ip, msmeId])
}

model ExportLog {
  id          Int      @id @default(autoincrement())
  msmeId      Int
  exportedAt  DateTime @default(now())
  MSME        MSME     @relation(fields: [msmeId], references: [id])
}
